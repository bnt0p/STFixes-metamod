name: CI

on:
  workflow_dispatch:
  push:
    tags:
      - '*'
    branches:
      - main
    paths-ignore:
    - LICENSE
    - README.md
    - 'configs**'
    - '**.sln'
    - '**.vcxproj**'
  pull_request:
    paths-ignore:
    - LICENSE
    - README.md
    - 'configs**'
    - '**.sln'
    - '**.vcxproj**'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    env:
        HL2SDKCS2: ${{ github.workspace }}/stfixes-metamod/sdk
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
          - os: ubuntu-latest
            container: registry.gitlab.steamos.cloud/steamrt/sniper/sdk
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: stfixes-metamod
          submodules: recursive
          fetch-depth: 0

      - name: Checkout Metamod
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/metamod-source
          ref: master
          path: mmsource-2.0
          submodules: recursive

      - name: Checkout AMBuild
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/ambuild
          path: ambuild

      - name: Install AMBuild
        run: |
          cd ambuild && python setup.py install && cd ..

      - name: Install Clang 16
        if: matrix.os == 'ubuntu-latest'
        run: |
          apt update && apt install -y clang-16
          ln -sf /usr/bin/clang-16 /usr/bin/clang && ln -sf /usr/bin/clang++-16 /usr/bin/clang++

      - name: Build
        working-directory: stfixes-metamod
        shell: bash
        run: |
          mkdir build && cd build
          python ../configure.py --enable-optimize --sdks cs2
          ambuild

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}
          path: stfixes-metamod/build/package
